@model PagedList.IPagedList<UniveristyRegisterSystem.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Lista studentów";
}

<div style="display: flex; align-items: baseline; justify-content: space-between;">
    <h2>Lista studentów</h2>

    <p>
        @Html.ActionLink(" Dodaj nowego studenta", "Create", null, new { @class = "glyphicon-plus" })
    </p>
    @using (Html.BeginForm("Index", "Student", FormMethod.Get))
    {
        <p>
            Wyszukaj studenta: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Szukaj" />
        </p>
    }
</div>



<table class="table table-hover table-striped table-bordered">
    <tr>
        <th>
            @Html.ActionLink("Nazwisko", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Imię
        </th>
        <th>
            @Html.ActionLink("Data dodania", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("Edytuj", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Szczegóły", "Details", new { id = item.ID }) |
                @Html.ActionLink("Usuń", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
<br />
Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))